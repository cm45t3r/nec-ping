#!/bin/bash

# Copyright (C) 2013 NEC de Colombia/TX-NOC
# Author: Carlos Uribe <cauribe@nec.com.co>

statisticalMode() {
	mode=`perl -le 'map{\$count{\$_}++} @ARGV; @m = sort {\$count{\$b} <=> \$count{\$a}} keys %count; print @m[0];' ${sample[@]}`
}

ne=$1
ip=$2
eqp_type=$3
zone=$4
status=$5

BASE_PATH=$6			# Where to find dependencies
OUT_FILE=$7				# Output file
PING_TIMEOUT=$8			# ICMP ping timeout in seconds
PING_PACKSIZE=$9 		# ICMP ping packet size in bytes
TOTAL_HITS=${10}		# Number of iterations
STEP=${11}				# Job idle time window (time expression)
PROGRESS=${12}			# Progress against overall process

post_process=1
ping_sample=""
conn_sample=""

echo "$PROGRESS - `date \"+%H:%M:%S\"`"
echo "$ne ($ip)"
echo "|_Type: $eqp_type"
echo "|_Zone: $zone"
echo "|_Connection Check />"

for (( hit_count=0; hit_count < $TOTAL_HITS; hit_count++ ))
do
	# Skip on Unmanage status
	if [ "$status" == "Unmanage" ]
	then
		ping_response="Unmanage"
		conn_response="Unmanage,Unmanage"
		post_process=0
		break
	fi
	
	conn_response=`java -cp $BASE_PATH/nec-snmp-manager.jar com.nec.snmp.manager.CommunicationManager $ip -type="$eqp_type" -snmp -http -short`
	snmp_response=`echo $conn_response | cut -d "," -f1`
	access_response=`echo $conn_response | cut -d "," -f2`
	ping_rtt=`rawping $ip $PING_TIMEOUT $PING_PACKSIZE`

	# Ensure ping requests on numeric answers and http received
	if [[ "$snmp_response" =~ ^[0-9]+$ ]] && [[ "$access_response" =~ ^[0-9]+$ || "$access_response" == "HTTP answer" ]]
	then
		ping_response="ICMP answer"
		post_process=0
		break
	fi

	case $ping_rtt in
		*None*)
			ping_response="No ICMP answer"
			;;
		*)
			ping_response="ICMP answer"
			;;
	esac

	ping_sample+=(`echo "$ping_response" | tr " " "_"`)
	conn_sample+=(`echo "$conn_response" | tr " " "_"`)

	echo "   [Hit$hit_count] $ping_response,$conn_response"
done

# Find statistical mode for ping and connection samples
if [ $post_process -eq 1 ]
then
	sample=${ping_sample[@]}
	statisticalMode
	ping_response=`echo "$mode" | tr "_" " "`

	sample=${conn_sample[@]}
	statisticalMode
	conn_response=`echo "$mode" | tr "_" " "`
fi

# Survey probe data for the final analysis
snmp_response=`echo $conn_response | cut -d "," -f1`
access_response=`echo $conn_response | cut -d "," -f2`

if [ "$ping_response" == "Unmanage" ]; then
	survey="Unmanaged"
elif [ "$ping_response" == "No ICMP answer" ]; then
	survey="Offline"
elif [[ "$snmp_response" == "No SNMP answer" && "$access_response" == "HTTP answer" ]]; then
	survey="Online with errors"
elif [ "$snmp_response" == "Null" ] && [[ "$access_response" == "Null" && "$eqp_type" =~ .*NEO.* || "$access_response" == "No HTTP answer" ]]
then
	survey="Online with errors"
else
	survey="Online"
fi

echo "   [Mode] $ping_response($ping_rtt ms),$conn_response"
echo -e "|_Status: $survey\n"
echo "`date \"+%Y/%m/%d %H:%M:%S\"`,$ne,$ip,$eqp_type,$zone,$status,$ping_response,$conn_response,$survey,$ping_rtt" >> $OUT_FILE

if [ "$STEP" != "0" ]; then
	echo necping-lib "\"$ne\"" "\"$ip\"" "\"$eqp_type\"" "\"$zone\"" "\"$status\"" "\"$BASE_PATH\"" "\"$OUT_FILE\"" $PING_TIMEOUT $PING_PACKSIZE $TOTAL_HITS "\"$STEP\" \"$PROGRESS\" &> /dev/null" | at now + $STEP
fi
